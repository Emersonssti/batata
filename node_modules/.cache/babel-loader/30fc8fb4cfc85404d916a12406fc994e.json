{"ast":null,"code":"export async function sendCheckPassword(email, password) {\n  const body = {\n    email: email,\n    password: password\n  };\n\n  try {\n    return {\n      status: true,\n      body: body\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, você nao tem permissão para acessar. Tente novamente!`\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    return {\n      status: false,\n      message: `Ops, ocorreu um erro. Tente novamente!`\n    };\n  }\n}\nexport async function sendChangePassword(password) {\n  const body = {\n    password: password\n  };\n\n  try {\n    return {\n      status: true,\n      body: body\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    return {\n      status: false,\n      message: `Ops, ocorreu um erro. Tente novamente!`\n    };\n  }\n}\nexport async function sendForgotPassword(email) {\n  const body = {\n    email: email\n  };\n\n  try {\n    return {\n      status: true,\n      body: body\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    return {\n      status: false,\n      message: `Ops, ocorreu um erro. Tente novamente!`\n    };\n  }\n}\nexport async function getMergeAccount(hash) {\n  const body = {\n    hash: hash\n  };\n\n  try {\n    return {\n      status: true,\n      body: body\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro ao ativar seu produto. Tente novamente!`\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    return {\n      status: false,\n      message: `Ops, ocorreu um erro. Tente novamente!`\n    };\n  }\n}\nexport async function sendMergeAccount(password, cpf, email) {\n  const body = {\n    password: password,\n    cpf: cpf,\n    email: email\n  };\n\n  try {\n    return {\n      status: true,\n      body: body\n    };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`\n      };\n    }\n\n    return {\n      status: false,\n      message: `Ops, ocorreu um erro. Tente novamente!`\n    };\n  }\n}","map":{"version":3,"sources":["/home/arthur.donato/Documentos/ProjetoClash/batata/src/services/Autentication/index.js"],"names":["sendCheckPassword","email","password","body","status","error","response","message","request","sendChangePassword","sendForgotPassword","getMergeAccount","hash","sendMergeAccount","cpf"],"mappings":"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","sourcesContent":["export async function sendCheckPassword(email, password) {\n  const body = {\n    email: email,\n    password: password,\n  };\n\n  try {\n    return { status: true, body: body };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, você nao tem permissão para acessar. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\nexport async function sendChangePassword(password) {\n  const body = {\n    password: password,\n  };\n\n  try {\n    return { status: true, body: body };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n\nexport async function sendForgotPassword(email) {\n  const body = { email: email };\n\n  try {\n    return { status: true, body: body };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\nexport async function getMergeAccount(hash) {\n  const body = { hash: hash }\n  try {\n    return { status: true, body: body };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro ao ativar seu produto. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\nexport async function sendMergeAccount(password, cpf, email) {\n  \n  const body = {\n    password: password,\n    cpf: cpf,\n    email: email,\n  };\n\n  try {    \n    return { status: true, body: body };\n  } catch (error) {\n    if (error.response) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    if (error.request) {\n      return {\n        status: false,\n        message: `Ops, ocorreu um erro. Tente novamente!`,\n      };\n    }\n\n    return { status: false, message: `Ops, ocorreu um erro. Tente novamente!` };\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}